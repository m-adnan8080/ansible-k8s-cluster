---

- name: Add the inventory into /etc/hosts
  lineinfile:
    dest: /etc/hosts
    regexp: '.*{{ item }}$'
    line: "{% set short_name = item.split('.') %}{{ hostvars[item]['ansible_facts'][ KUBELET_INTERFACE_NAME ]['ipv4']['address'] }} {{item}} {{ short_name[0] }}"
    state: present
  with_items:
    - "{{ groups['all'] }}"
  when: hostvars[item]['ansible_facts'][ KUBELET_INTERFACE_NAME ]['ipv4']['address'] is defined

- name: Install iproute on RedHat Family OS
  package:
    name: iproute
    state: present
  when: ansible_os_family == 'RedHat'

- name: Add kubernetes GPG key on Debian Family OS
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
  when: ansible_os_family == 'Debian'

- name: Add kubernetes repositorie on Debian Family OS
  apt_repository:
    repo: deb http://apt.kubernetes.io/ kubernetes-{{ ansible_distribution_release }} main
    state: present
  when: ansible_os_family == 'Debian'

- name: Add kubernates repo to Redhat Family OS
  blockinfile:
    path: /etc/yum.repos.d/kubernetes.repo
    create: yes
    block: |
      [kubernetes]
      name=Kubernetes
      baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
      enabled=1
      gpgcheck=0
      repo_gpgcheck=1
      gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
  when: ansible_os_family == 'RedHat'

- name: Install Kubernetes version {{ K8S_DEBIAN_VERSION }} and tools on Debian Family OS
  package:
    name:
      - kubeadm-{{ K8S_DEBIAN_VERSION }}
      - kubectl-{{ K8S_DEBIAN_VERSION }}
      - kubelet-{{ K8S_DEBIAN_VERSION }}
    state: present
  when: ansible_os_family == 'Debian'

- name: Install Kubernetes version {{ K8S_DEBIAN_VERSION }}  and tools on Redhat Family OS
  package:
    name:
      - kubeadm-{{ K8S_REDHAT_VERSION }}
      - kubectl-{{ K8S_REDHAT_VERSION }}
      - kubelet-{{ K8S_REDHAT_VERSION }}
    state: present
  when: ansible_os_family == 'RedHat'

- name: Firewalld configuration on RedHat Family OS
  firewalld:
    zone: public
    port: "{{ item }}"
    permanent: yes
    state: enabled
  loop:
    - 53/udp
    - 6443/tcp
    - 2379-2380/tcp
    - 10250-10252/tcp
    - 10255/tcp
  notify: reload firewalld
  when: ansible_os_family == 'RedHat'

- name: flust handlers
  meta: flush_handlers

- name: Put SELinux in permissive mode on RedHat Family OS
  selinux:
    policy: targeted
    state: permissive
  when: ansible_os_family == 'RedHat'

- name: Remove swapfile from /etc/fstab
  shell: sed -e '/swap/ s/^#*/#/' -i /etc/fstab
  args:
    warn: false
  changed_when: false

- name: Disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: Load br_netfilter and overlay on boot
  blockinfile:
    path: /etc/modules-load.d/kubernetes.conf
    create: yes
    block: |
      br_netfilter
      overlay

- name: Load br_netfilter for current session
  modprobe:
    name: br_netfilter
    state: present

- name: Load overlay for current session
  modprobe:
    name: overlay
    state: present

- name: Enable Kubernetes birdge networking
  blockinfile:
    path: /etc/sysctl.d/kubernetes.conf
    create: yes
    block: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1
  register: sysctl_result

- name: Apply sysctl config
  shell: sysctl --system
  when: sysctl_result.changed

- name: Systemd deamon-reload
  systemd:
    daemon_reload: yes

- name: Enable at boot and Start Kubernetes service
  systemd:
    name: kubelet
    state: started
    enabled: yes

- name: Pull required docker images on kmaster(s) node
  shell: kubeadm config images pull
  when: inventory_hostname in groups['master']

- name: Pull required docker images on worker(s) node
  shell: |
    if docker images | grep '"{{ item }}"' | wc -l; then docker pull "{{ item }}"; fi
  with_items:
    - k8s.gcr.io/kube-proxy:v1.22.1
    # - calico/node:v3.20.0
    # - calico/pod2daemon-flexvol:v3.20.0
    # - calico/cni:v3.20.0
    - k8s.gcr.io/pause:3.5
  when: inventory_hostname in groups['workers'] and DOCKER == true and CRIO == False
