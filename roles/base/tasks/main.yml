---

- name: Add the inventory into /etc/hosts
  lineinfile:
    dest: /etc/hosts
    regexp: '.*{{ item }}$'
    line: "{% set short_name = item.split('.') %}{{ hostvars[item]['ansible_facts']['eth1']['ipv4']['address'] }} {{item}} {{ short_name[0] }}"
    state: present
  with_items:
    - "{{ groups['all'] }}"
  when: hostvars[item]['ansible_facts']['eth1']['ipv4']['address'] is defined

- name: Install iproute on RedHat Family OS
  package:
    name:
      - iproute
    state: latest
  when: ansible_os_family == 'RedHat'

- name: Install dependency on Debian Family OS
  package:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
    state: present
    update_cache: yes
  when: ansible_os_family == 'Debian'

- name: Add docker and kubernetes GPG keys on Debian Family OS
  apt_key:
    url:
      - https://download.docker.com/linux/ubuntu/gpg
      - https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
  when: ansible_os_family == 'Debian'

- name: Add docker and kubernetes repositories on Debian Family OS
  apt_repository:
    repo:
      - deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
      - deb http://apt.kubernetes.io/ kubernetes-{{ ansible_distribution_release }} main
    state: present
  when: ansible_os_family == 'Debian'

- name: Add Docker repo to Redhat Family OS
  get_url:
    url: https://download.docker.com/linux/centos/docker-ce.repo
    dest: /etc/yum.repos.d/docer-ce.repo
  when: ansible_os_family == 'RedHat'

- name: Add kubernates repo to Redhat Family OS
  blockinfile:
    path: /etc/yum.repos.d/kubernetes.repo
    create: yes
    block: |
      [kubernetes]
      name=Kubernetes
      baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
      enabled=1
      gpgcheck=0
      repo_gpgcheck=1
      gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg
  when: ansible_os_family == 'RedHat'

- name: Install latest Docker-CE, kubernetes and tools
  package:
    name:
      - kubeadm
      - kubectl
      - kubelet
      - docker-ce
    state: present

- name: Firewalld configuration on RedHat Family OS
  firewalld:
    zone: public
    port: "{{ item }}"
    permanent: yes
    state: enabled
  loop:
    - 53/udp
    - 6443/tcp
    - 2379-2380/tcp
    - 10250-10252/tcp
    - 10255/tcp
  notify: reload firewalld
  when: ansible_os_family == 'RedHat'

- meta: flush_handlers

- name: Put SELinux in permissive mode on RedHat Family OS
  selinux:
    policy: targeted
    state: permissive
  when: ansible_os_family == 'RedHat'

- name: Add user vagrant to docker group
  user:
    name: vagrant
    groups: docker
    append: yes

- name: Remove swapfile from /etc/fstab
  mount:
    name: swap
    fstype: swap
    state: absent

- name: Disable swap
  command: swapoff -a
  when: ansible_swaptotal_mb > 0

- name: Create /etc/docker directory
  file:
    path: /etc/docker
    state: directory

- name: Update the docker driver to systemd
  copy:
    dest: "/etc/docker/daemon.json"
    content: '{
                "exec-opts": ["native.cgroupdriver=systemd"],
                "log-driver": "json-file",
                "log-opts": {
                  "max-size": "100m"
                },
                "storage-driver": "overlay2"
              }'
    mode: 0644
  register: docker_json_file_stat

- name: Enable Kubernetes birdge networking
  blockinfile:
    path: /etc/sysctl.d/kubernetes.conf
    create: yes
    block: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
  register: sysctl_result

- name: Apply sysctl config
  shell: sysctl --system
  when: sysctl_result.changed

- name: Enable at boot and Start Docker service
  service:
    name: docker
    state: started
    enabled: yes

- name: Enable at boot and Start Kubernetes service
  service:
    name: kubelet
    state: started
    enabled: yes

- name: Pull required docker images on kmaster(s) node
  docker_image:
    name:
      - k8s.gcr.io/kube-apiserver:v1.22.1
      - k8s.gcr.io/kube-scheduler:v1.22.1
      - k8s.gcr.io/kube-proxy:v1.22.1
      - k8s.gcr.io/kube-controller-manager:v1.22.1
      - calico/node:v3.20.0
      - calico/pod2daemon-flexvol:v3.20.0
      - calico/cni:v3.20.0
      - calico/kube-controllers:v3.20.0
      - k8s.gcr.io/etcd:3.5.0-0
      - k8s.gcr.io/coredns/coredns:v1.8.4
      - k8s.gcr.io/pause:3.5
    state: present
  when: inventory_hostname in groups['master']

- name: Pull required docker images on worker(s) node
  docker_image:
    name:
      - k8s.gcr.io/kube-proxy:v1.22.1
      - calico/node:v3.20.0
      - calico/pod2daemon-flexvol:v3.20.0
      - calico/cni:v3.20.0
      - k8s.gcr.io/pause:3.5
    state: present
  when: inventory_hostname in groups['workers']
